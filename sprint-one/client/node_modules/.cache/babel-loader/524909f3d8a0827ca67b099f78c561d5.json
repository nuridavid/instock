{"ast":null,"code":"var _jsxFileName = \"/Users/parhamsaniei/Downloads/lMIA-C41-LEO-main2/sprint-one/client/src/pages/WarehouseModify/WarehouseModify.jsx\",\n    _s = $RefreshSig$();\n\nimport './WarehouseModify.scss';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport EditAddWarehouse from '../../components/EditWarehouse/EditAddWarehouse';\nimport validator from 'validator';\nimport isEmpty from '../../helpers/isEmpty';\nimport isPhone from '../../helpers/isPhone';\nimport { axiosPut, axiosPost, axiosGetWarehouse } from '../../helpers/axiosCalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction WarehouseEdit(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    id\n  } = useParams();\n  const edit = {\n    title: 'Edit Warehouse',\n    button: 'save',\n    handleSubmit: e => {\n      e.preventDefault();\n      setErrorMessage(null);\n      const formData = new FormData(e.target);\n      const formDataObj = Object.fromEntries(formData);\n\n      if (isEmpty(formDataObj)) {\n        setErrorMessage({\n          message: 'This field is required'\n        });\n      } else if (!isPhone(formDataObj.phone)) {\n        setErrorMessage({\n          phoneMessage: 'Invalid Phone Number'\n        });\n      } else if (!validator.isEmail(formDataObj.email + '')) {\n        setErrorMessage({\n          emailMessage: 'Invalid Email'\n        });\n      } else {\n        axiosPut(`/api/warehouses/${id}`, formDataObj);\n        setTimeout(() => {\n          props.history.push('/');\n        }, 1000);\n      }\n    }\n  };\n  const add = {\n    title: 'Add New Warehouse',\n    button: '+ Add Warehouse',\n    handleSubmit: e => {\n      e.preventDefault();\n      setErrorMessage(null);\n      const formData = new FormData(e.target);\n      const formDataObj = Object.fromEntries(formData);\n\n      if (isEmpty(formDataObj)) {\n        setErrorMessage({\n          message: 'This field is required'\n        });\n      } else if (!isPhone(formDataObj.phone)) {\n        setErrorMessage({\n          phoneMessage: 'Invalid Phone Number'\n        });\n      } else if (!validator.isEmail(formDataObj.email + '')) {\n        setErrorMessage({\n          emailMessage: 'Invalid Email'\n        });\n      } else {\n        axiosPost(`/api/warehouses/`, formDataObj);\n        setTimeout(() => {\n          props.history.push('/');\n        }, 1000);\n      }\n    }\n  };\n\n  const handleClick = () => {\n    props.history.push('/');\n  }; //States\n\n\n  const [formInfo, setFormInfo] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [warehouse, setWarehouse] = useState(null);\n  useEffect(() => {\n    axiosGetWarehouse(`/api/warehouses/${id}`, setWarehouse);\n\n    if (location.pathname === '/warehouses/modify/add') {\n      setFormInfo(add);\n    } else {\n      setFormInfo(edit);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: formInfo ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"position\",\n      children: /*#__PURE__*/_jsxDEV(EditAddWarehouse, {\n        formInfo: formInfo,\n        errorMessage: errorMessage,\n        warehouse: warehouse,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : ''\n  }, void 0, false);\n}\n\n_s(WarehouseEdit, \"Hd9ielAhDV5WMZi3GIaRy852+7E=\", false, function () {\n  return [useLocation, useParams];\n});\n\n_c = WarehouseEdit;\nexport default WarehouseEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"WarehouseEdit\");","map":{"version":3,"sources":["/Users/parhamsaniei/Downloads/lMIA-C41-LEO-main2/sprint-one/client/src/pages/WarehouseModify/WarehouseModify.jsx"],"names":["React","useState","useEffect","useLocation","useParams","EditAddWarehouse","validator","isEmpty","isPhone","axiosPut","axiosPost","axiosGetWarehouse","WarehouseEdit","props","location","id","edit","title","button","handleSubmit","e","preventDefault","setErrorMessage","formData","FormData","target","formDataObj","Object","fromEntries","message","phone","phoneMessage","isEmail","email","emailMessage","setTimeout","history","push","add","handleClick","formInfo","setFormInfo","errorMessage","warehouse","setWarehouse","pathname"],"mappings":"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","sourcesContent":["import './WarehouseModify.scss';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport EditAddWarehouse from '../../components/EditWarehouse/EditAddWarehouse';\nimport validator from 'validator';\nimport isEmpty from '../../helpers/isEmpty';\nimport isPhone from '../../helpers/isPhone';\nimport {\n  axiosPut,\n  axiosPost,\n  axiosGetWarehouse\n} from '../../helpers/axiosCalls';\n\nfunction WarehouseEdit(props) {\n  const location = useLocation();\n  const { id } = useParams();\n\n  const edit = {\n    title: 'Edit Warehouse',\n    button: 'save',\n    handleSubmit: (e) => {\n      e.preventDefault();\n      setErrorMessage(null);\n      const formData = new FormData(e.target);\n      const formDataObj = Object.fromEntries(formData);\n      if (isEmpty(formDataObj)) {\n        setErrorMessage({ message: 'This field is required' });\n      } else if (!isPhone(formDataObj.phone)) {\n        setErrorMessage({ phoneMessage: 'Invalid Phone Number' });\n      } else if (!validator.isEmail(formDataObj.email + '')) {\n        setErrorMessage({ emailMessage: 'Invalid Email' });\n      } else {\n        axiosPut(`/api/warehouses/${id}`, formDataObj);\n        setTimeout(() => {\n          props.history.push('/');\n        }, 1000);\n      }\n    }\n  };\n\n  const add = {\n    title: 'Add New Warehouse',\n    button: '+ Add Warehouse',\n    handleSubmit: (e) => {\n      e.preventDefault();\n      setErrorMessage(null);\n      const formData = new FormData(e.target);\n      const formDataObj = Object.fromEntries(formData);\n      if (isEmpty(formDataObj)) {\n        setErrorMessage({ message: 'This field is required' });\n      } else if (!isPhone(formDataObj.phone)) {\n        setErrorMessage({ phoneMessage: 'Invalid Phone Number' });\n      } else if (!validator.isEmail(formDataObj.email + '')) {\n        setErrorMessage({ emailMessage: 'Invalid Email' });\n      } else {\n        axiosPost(`/api/warehouses/`, formDataObj);\n        setTimeout(() => {\n          props.history.push('/');\n        }, 1000);\n      }\n    }\n  };\n\n  const handleClick = () => {\n    props.history.push('/');\n  };\n\n  //States\n  const [formInfo, setFormInfo] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [warehouse, setWarehouse] = useState(null);\n\n  useEffect(() => {\n    axiosGetWarehouse(`/api/warehouses/${id}`, setWarehouse);\n    if (location.pathname === '/warehouses/modify/add') {\n      setFormInfo(add);\n    } else {\n      setFormInfo(edit);\n    }\n  }, [location]);\n\n  return (\n    <>\n      {formInfo ? (\n        <section className=\"position\">\n          <EditAddWarehouse\n            formInfo={formInfo}\n            errorMessage={errorMessage}\n            warehouse={warehouse}\n            handleClick={handleClick}\n          />\n        </section>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default WarehouseEdit;\n"]},"metadata":{},"sourceType":"module"}